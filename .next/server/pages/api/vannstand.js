"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/vannstand";
exports.ids = ["pages/api/vannstand"];
exports.modules = {

/***/ "(api)/./pages/api/vannstand.js":
/*!********************************!*\
  !*** ./pages/api/vannstand.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nconst NVE_API_KEY = process.env.NVE_API_KEY;\nconst base = \"https://hydapi.nve.no\";\nconst path = \"/api/v1/Observations?\";\nconst stationId = \"2.101.0\";\nconst parameter = \"1000\";\nconst resolutionTime = \"hour\";\nconst daySpan = 7;\nasync function handler(req, res) {\n    let fromDate;\n    if (req.query.fromDate) {\n        fromDate = new Date(parseInt(req.query.fromDate));\n    } else {\n        fromDate = new Date();\n    }\n    const year = fromDate.getFullYear();\n    let month = fromDate.getMonth() + 1;\n    month = month < 10 ? \"0\" + month : month;\n    let day = fromDate.getDate();\n    day = day < 10 ? \"0\" + day : day;\n    const referenceTime = `${year}-${month}-${day}T00:00/P${daySpan}D`;\n    const EndPoint = `${base}${path}StationId=${stationId}&Parameter=${parameter}&ResolutionTime=${resolutionTime}&ReferenceTime=${referenceTime}`;\n    const vannstandData = await getData(EndPoint, {}).then((data)=>{\n        return data;\n    });\n    res.status(200).send({\n        vannstandData\n    });\n};\nasync function getData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n        method: \"GET\",\n        // mode: \"cors\", // no-cors, *cors, same-origin\n        // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"X-API-KEY\": NVE_API_KEY,\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdmFubnN0YW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw2RUFBNkU7QUFDN0UsTUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsV0FBVztBQUMzQyxNQUFNRyxJQUFJLEdBQUcsdUJBQXVCO0FBQ3BDLE1BQU1DLElBQUksR0FBRyx1QkFBdUI7QUFDcEMsTUFBTUMsU0FBUyxHQUFHLFNBQVM7QUFDM0IsTUFBTUMsU0FBUyxHQUFHLE1BQU07QUFDeEIsTUFBTUMsY0FBYyxHQUFHLE1BQU07QUFDN0IsTUFBTUMsT0FBTyxHQUFHLENBQUM7QUFFRixlQUFlQyxPQUFPLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQzVDLElBQUlDLFFBQVE7SUFDWixJQUFJRixHQUFHLENBQUNHLEtBQUssQ0FBQ0QsUUFBUSxFQUFFO1FBQ3BCQSxRQUFRLEdBQUcsSUFBSUUsSUFBSSxDQUFDQyxRQUFRLENBQUNMLEdBQUcsQ0FBQ0csS0FBSyxDQUFDRCxRQUFRLENBQUMsQ0FBQyxDQUFDO0tBQ3JELE1BQU07UUFDSEEsUUFBUSxHQUFHLElBQUlFLElBQUksRUFBRSxDQUFDO0tBQ3pCO0lBQ0QsTUFBTUUsSUFBSSxHQUFHSixRQUFRLENBQUNLLFdBQVcsRUFBRTtJQUNuQyxJQUFJQyxLQUFLLEdBQUdOLFFBQVEsQ0FBQ08sUUFBUSxFQUFFLEdBQUcsQ0FBQztJQUNuQ0QsS0FBSyxHQUFHQSxLQUFLLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBR0EsS0FBSyxHQUFHQSxLQUFLLENBQUM7SUFDekMsSUFBSUUsR0FBRyxHQUFHUixRQUFRLENBQUNTLE9BQU8sRUFBRTtJQUM1QkQsR0FBRyxHQUFHQSxHQUFHLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBR0EsR0FBRyxHQUFHQSxHQUFHLENBQUM7SUFDakMsTUFBTUUsYUFBYSxHQUFHLENBQUMsRUFBRU4sSUFBSSxDQUFDLENBQUMsRUFBRUUsS0FBSyxDQUFDLENBQUMsRUFBRUUsR0FBRyxDQUFDLFFBQVEsRUFBRVosT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVsRSxNQUFNZSxRQUFRLEdBQUcsQ0FBQyxFQUFFcEIsSUFBSSxDQUFDLEVBQUVDLElBQUksQ0FBQyxVQUFVLEVBQUVDLFNBQVMsQ0FBQyxXQUFXLEVBQUVDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRUMsY0FBYyxDQUFDLGVBQWUsRUFBRWUsYUFBYSxDQUFDLENBQUM7SUFFOUksTUFBTUUsYUFBYSxHQUFHLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxHQUFLO1FBQzdELE9BQU9BLElBQUksQ0FBQztLQUNmLENBQUM7SUFFRmhCLEdBQUcsQ0FBQ2lCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1FBQUVMLGFBQWE7S0FBRSxDQUFDLENBQUM7Q0FDM0M7QUFFRCxlQUFlQyxPQUFPLENBQUNLLEdBQUcsR0FBRyxFQUFFLEVBQUVILElBQUksR0FBRyxFQUFFLEVBQUU7SUFDeEMsTUFBTUksUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFO1FBQzlCRyxNQUFNLEVBQUUsS0FBSztRQUNiLCtDQUErQztRQUMvQyxnRkFBZ0Y7UUFDaEYsNkRBQTZEO1FBQzdEQyxPQUFPLEVBQUU7WUFDTCxXQUFXLEVBQUVsQyxXQUFXO1lBQ3hCbUMsTUFBTSxFQUFFLGtCQUFrQjtZQUMxQixjQUFjLEVBQUUsa0JBQWtCO1NBQ3JDO0tBS0osQ0FBQztJQUVGLE9BQU9KLFFBQVEsQ0FBQ0ssSUFBSSxFQUFFLENBQUMsQ0FBQyxzREFBc0Q7Q0FDakYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92YW5uc3RhbmQtYXBpLy4vcGFnZXMvYXBpL3Zhbm5zdGFuZC5qcz82OTBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5leHQuanMgQVBJIHJvdXRlIHN1cHBvcnQ6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwaS1yb3V0ZXMvaW50cm9kdWN0aW9uXHJcbmNvbnN0IE5WRV9BUElfS0VZID0gcHJvY2Vzcy5lbnYuTlZFX0FQSV9LRVk7XHJcbmNvbnN0IGJhc2UgPSBcImh0dHBzOi8vaHlkYXBpLm52ZS5ub1wiO1xyXG5jb25zdCBwYXRoID0gXCIvYXBpL3YxL09ic2VydmF0aW9ucz9cIjtcclxuY29uc3Qgc3RhdGlvbklkID0gXCIyLjEwMS4wXCI7XHJcbmNvbnN0IHBhcmFtZXRlciA9IFwiMTAwMFwiO1xyXG5jb25zdCByZXNvbHV0aW9uVGltZSA9IFwiaG91clwiO1xyXG5jb25zdCBkYXlTcGFuID0gNztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICAgIGxldCBmcm9tRGF0ZTtcclxuICAgIGlmIChyZXEucXVlcnkuZnJvbURhdGUpIHtcclxuICAgICAgICBmcm9tRGF0ZSA9IG5ldyBEYXRlKHBhcnNlSW50KHJlcS5xdWVyeS5mcm9tRGF0ZSkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBmcm9tRGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB5ZWFyID0gZnJvbURhdGUuZ2V0RnVsbFllYXIoKTtcclxuICAgIGxldCBtb250aCA9IGZyb21EYXRlLmdldE1vbnRoKCkgKyAxO1xyXG4gICAgbW9udGggPSBtb250aCA8IDEwID8gXCIwXCIgKyBtb250aCA6IG1vbnRoO1xyXG4gICAgbGV0IGRheSA9IGZyb21EYXRlLmdldERhdGUoKTtcclxuICAgIGRheSA9IGRheSA8IDEwID8gXCIwXCIgKyBkYXkgOiBkYXk7XHJcbiAgICBjb25zdCByZWZlcmVuY2VUaW1lID0gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9VDAwOjAwL1Ake2RheVNwYW59RGA7XHJcblxyXG4gICAgY29uc3QgRW5kUG9pbnQgPSBgJHtiYXNlfSR7cGF0aH1TdGF0aW9uSWQ9JHtzdGF0aW9uSWR9JlBhcmFtZXRlcj0ke3BhcmFtZXRlcn0mUmVzb2x1dGlvblRpbWU9JHtyZXNvbHV0aW9uVGltZX0mUmVmZXJlbmNlVGltZT0ke3JlZmVyZW5jZVRpbWV9YDtcclxuXHJcbiAgICBjb25zdCB2YW5uc3RhbmREYXRhID0gYXdhaXQgZ2V0RGF0YShFbmRQb2ludCwge30pLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgdmFubnN0YW5kRGF0YSB9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0RGF0YSh1cmwgPSBcIlwiLCBkYXRhID0ge30pIHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLCAvLyAqR0VULCBQT1NULCBQVVQsIERFTEVURSwgZXRjLlxyXG4gICAgICAgIC8vIG1vZGU6IFwiY29yc1wiLCAvLyBuby1jb3JzLCAqY29ycywgc2FtZS1vcmlnaW5cclxuICAgICAgICAvLyBjYWNoZTogXCJuby1jYWNoZVwiLCAvLyAqZGVmYXVsdCwgbm8tY2FjaGUsIHJlbG9hZCwgZm9yY2UtY2FjaGUsIG9ubHktaWYtY2FjaGVkXHJcbiAgICAgICAgLy8gY3JlZGVudGlhbHM6IFwic2FtZS1vcmlnaW5cIiwgLy8gaW5jbHVkZSwgKnNhbWUtb3JpZ2luLCBvbWl0XHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBcIlgtQVBJLUtFWVwiOiBOVkVfQVBJX0tFWSxcclxuICAgICAgICAgICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgLy8gcmVkaXJlY3Q6IFwiZm9sbG93XCIsIC8vIG1hbnVhbCwgKmZvbGxvdywgZXJyb3JcclxuICAgICAgICAvLyByZWZlcnJlclBvbGljeTogXCJuby1yZWZlcnJlclwiLCAvLyBuby1yZWZlcnJlciwgKm5vLXJlZmVycmVyLXdoZW4tZG93bmdyYWRlLCBvcmlnaW4sIG9yaWdpbi13aGVuLWNyb3NzLW9yaWdpbiwgc2FtZS1vcmlnaW4sIHN0cmljdC1vcmlnaW4sIHN0cmljdC1vcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4sIHVuc2FmZS11cmxcclxuICAgICAgICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSwgLy8gYm9keSBkYXRhIHR5cGUgbXVzdCBtYXRjaCBcIkNvbnRlbnQtVHlwZVwiIGhlYWRlclxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsgLy8gcGFyc2VzIEpTT04gcmVzcG9uc2UgaW50byBuYXRpdmUgSmF2YVNjcmlwdCBvYmplY3RzXHJcbn1cclxuIl0sIm5hbWVzIjpbIk5WRV9BUElfS0VZIiwicHJvY2VzcyIsImVudiIsImJhc2UiLCJwYXRoIiwic3RhdGlvbklkIiwicGFyYW1ldGVyIiwicmVzb2x1dGlvblRpbWUiLCJkYXlTcGFuIiwiaGFuZGxlciIsInJlcSIsInJlcyIsImZyb21EYXRlIiwicXVlcnkiLCJEYXRlIiwicGFyc2VJbnQiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsImdldE1vbnRoIiwiZGF5IiwiZ2V0RGF0ZSIsInJlZmVyZW5jZVRpbWUiLCJFbmRQb2ludCIsInZhbm5zdGFuZERhdGEiLCJnZXREYXRhIiwidGhlbiIsImRhdGEiLCJzdGF0dXMiLCJzZW5kIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJBY2NlcHQiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/vannstand.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/vannstand.js"));
module.exports = __webpack_exports__;

})();
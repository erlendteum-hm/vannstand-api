"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/vannstand";
exports.ids = ["pages/api/vannstand"];
exports.modules = {

/***/ "(api)/./pages/api/vannstand.js":
/*!********************************!*\
  !*** ./pages/api/vannstand.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nconst NVE_API_KEY = process.env.NVE_API_KEY;\nconst base = \"https://hydapi.nve.no\";\nconst path = \"/api/v1/Observations?\";\nconst stationId = \"2.101.0\";\nconst parameter = \"1000\";\nconst resolutionTime = \"hour\";\nconst daySpan = 7;\nasync function handler(req, res) {\n    let fromDate;\n    if (req.query.fromDate) {\n        fromDate = new Date(parseInt(req.query.fromDate));\n    } else {\n        fromDate = new Date();\n    }\n    const year = fromDate.getFullYear();\n    let month = fromDate.getMonth() + 1;\n    month = month < 10 ? \"0\" + month : month;\n    let day = fromDate.getDate();\n    day = day < 10 ? \"0\" + day : day;\n    const referenceTime = `${year}-${month}-${day}T00:00/P${daySpan}D`;\n    const EndPoint = `${base}${path}StationId=${stationId}&Parameter=${parameter}&ResolutionTime=${resolutionTime}&ReferenceTime=${referenceTime}`;\n    const vannstandData = await getData(EndPoint, {}).then((data)=>{\n        return data;\n    });\n    res.status(200).send({\n        vannstandData\n    });\n};\nasync function getData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n        method: \"GET\",\n        // mode: \"cors\", // no-cors, *cors, same-origin\n        // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"X-API-KEY\": \"tPw/dsoaC0WHbLESGMO9uw==\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdmFubnN0YW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw2RUFBNkU7QUFDN0UsTUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsV0FBVztBQUMzQyxNQUFNRyxJQUFJLEdBQUcsdUJBQXVCO0FBQ3BDLE1BQU1DLElBQUksR0FBRyx1QkFBdUI7QUFDcEMsTUFBTUMsU0FBUyxHQUFHLFNBQVM7QUFDM0IsTUFBTUMsU0FBUyxHQUFHLE1BQU07QUFDeEIsTUFBTUMsY0FBYyxHQUFHLE1BQU07QUFDN0IsTUFBTUMsT0FBTyxHQUFHLENBQUM7QUFFRixlQUFlQyxPQUFPLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO0lBQzVDLElBQUlDLFFBQVE7SUFDWixJQUFJRixHQUFHLENBQUNHLEtBQUssQ0FBQ0QsUUFBUSxFQUFFO1FBQ3BCQSxRQUFRLEdBQUcsSUFBSUUsSUFBSSxDQUFDQyxRQUFRLENBQUNMLEdBQUcsQ0FBQ0csS0FBSyxDQUFDRCxRQUFRLENBQUMsQ0FBQyxDQUFDO0tBQ3JELE1BQU07UUFDSEEsUUFBUSxHQUFHLElBQUlFLElBQUksRUFBRSxDQUFDO0tBQ3pCO0lBQ0QsTUFBTUUsSUFBSSxHQUFHSixRQUFRLENBQUNLLFdBQVcsRUFBRTtJQUNuQyxJQUFJQyxLQUFLLEdBQUdOLFFBQVEsQ0FBQ08sUUFBUSxFQUFFLEdBQUcsQ0FBQztJQUNuQ0QsS0FBSyxHQUFHQSxLQUFLLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBR0EsS0FBSyxHQUFHQSxLQUFLLENBQUM7SUFDekMsSUFBSUUsR0FBRyxHQUFHUixRQUFRLENBQUNTLE9BQU8sRUFBRTtJQUM1QkQsR0FBRyxHQUFHQSxHQUFHLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBR0EsR0FBRyxHQUFHQSxHQUFHLENBQUM7SUFDakMsTUFBTUUsYUFBYSxHQUFHLENBQUMsRUFBRU4sSUFBSSxDQUFDLENBQUMsRUFBRUUsS0FBSyxDQUFDLENBQUMsRUFBRUUsR0FBRyxDQUFDLFFBQVEsRUFBRVosT0FBTyxDQUFDLENBQUMsQ0FBQztJQUVsRSxNQUFNZSxRQUFRLEdBQUcsQ0FBQyxFQUFFcEIsSUFBSSxDQUFDLEVBQUVDLElBQUksQ0FBQyxVQUFVLEVBQUVDLFNBQVMsQ0FBQyxXQUFXLEVBQUVDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRUMsY0FBYyxDQUFDLGVBQWUsRUFBRWUsYUFBYSxDQUFDLENBQUM7SUFFOUksTUFBTUUsYUFBYSxHQUFHLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDRyxJQUFJLENBQUMsQ0FBQ0MsSUFBSSxHQUFLO1FBQzdELE9BQU9BLElBQUksQ0FBQztLQUNmLENBQUM7SUFFRmhCLEdBQUcsQ0FBQ2lCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1FBQUVMLGFBQWE7S0FBRSxDQUFDLENBQUM7Q0FDM0M7QUFFRCxlQUFlQyxPQUFPLENBQUNLLEdBQUcsR0FBRyxFQUFFLEVBQUVILElBQUksR0FBRyxFQUFFLEVBQUU7SUFDeEMsTUFBTUksUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsR0FBRyxFQUFFO1FBQzlCRyxNQUFNLEVBQUUsS0FBSztRQUNiLCtDQUErQztRQUMvQyxnRkFBZ0Y7UUFDaEYsNkRBQTZEO1FBQzdEQyxPQUFPLEVBQUU7WUFDTCxXQUFXLEVBQUUsMEJBQTBCO1lBQ3ZDQyxNQUFNLEVBQUUsa0JBQWtCO1lBQzFCLGNBQWMsRUFBRSxrQkFBa0I7U0FDckM7S0FLSixDQUFDO0lBRUYsT0FBT0osUUFBUSxDQUFDSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLHNEQUFzRDtDQUNqRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Zhbm5zdGFuZC1hcGkvLi9wYWdlcy9hcGkvdmFubnN0YW5kLmpzPzY5MGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTmV4dC5qcyBBUEkgcm91dGUgc3VwcG9ydDogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBpLXJvdXRlcy9pbnRyb2R1Y3Rpb25cclxuY29uc3QgTlZFX0FQSV9LRVkgPSBwcm9jZXNzLmVudi5OVkVfQVBJX0tFWTtcclxuY29uc3QgYmFzZSA9IFwiaHR0cHM6Ly9oeWRhcGkubnZlLm5vXCI7XHJcbmNvbnN0IHBhdGggPSBcIi9hcGkvdjEvT2JzZXJ2YXRpb25zP1wiO1xyXG5jb25zdCBzdGF0aW9uSWQgPSBcIjIuMTAxLjBcIjtcclxuY29uc3QgcGFyYW1ldGVyID0gXCIxMDAwXCI7XHJcbmNvbnN0IHJlc29sdXRpb25UaW1lID0gXCJob3VyXCI7XHJcbmNvbnN0IGRheVNwYW4gPSA3O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gICAgbGV0IGZyb21EYXRlO1xyXG4gICAgaWYgKHJlcS5xdWVyeS5mcm9tRGF0ZSkge1xyXG4gICAgICAgIGZyb21EYXRlID0gbmV3IERhdGUocGFyc2VJbnQocmVxLnF1ZXJ5LmZyb21EYXRlKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZyb21EYXRlID0gbmV3IERhdGUoKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHllYXIgPSBmcm9tRGF0ZS5nZXRGdWxsWWVhcigpO1xyXG4gICAgbGV0IG1vbnRoID0gZnJvbURhdGUuZ2V0TW9udGgoKSArIDE7XHJcbiAgICBtb250aCA9IG1vbnRoIDwgMTAgPyBcIjBcIiArIG1vbnRoIDogbW9udGg7XHJcbiAgICBsZXQgZGF5ID0gZnJvbURhdGUuZ2V0RGF0ZSgpO1xyXG4gICAgZGF5ID0gZGF5IDwgMTAgPyBcIjBcIiArIGRheSA6IGRheTtcclxuICAgIGNvbnN0IHJlZmVyZW5jZVRpbWUgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1UMDA6MDAvUCR7ZGF5U3Bhbn1EYDtcclxuXHJcbiAgICBjb25zdCBFbmRQb2ludCA9IGAke2Jhc2V9JHtwYXRofVN0YXRpb25JZD0ke3N0YXRpb25JZH0mUGFyYW1ldGVyPSR7cGFyYW1ldGVyfSZSZXNvbHV0aW9uVGltZT0ke3Jlc29sdXRpb25UaW1lfSZSZWZlcmVuY2VUaW1lPSR7cmVmZXJlbmNlVGltZX1gO1xyXG5cclxuICAgIGNvbnN0IHZhbm5zdGFuZERhdGEgPSBhd2FpdCBnZXREYXRhKEVuZFBvaW50LCB7fSkudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoeyB2YW5uc3RhbmREYXRhIH0pO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXREYXRhKHVybCA9IFwiXCIsIGRhdGEgPSB7fSkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsIC8vICpHRVQsIFBPU1QsIFBVVCwgREVMRVRFLCBldGMuXHJcbiAgICAgICAgLy8gbW9kZTogXCJjb3JzXCIsIC8vIG5vLWNvcnMsICpjb3JzLCBzYW1lLW9yaWdpblxyXG4gICAgICAgIC8vIGNhY2hlOiBcIm5vLWNhY2hlXCIsIC8vICpkZWZhdWx0LCBuby1jYWNoZSwgcmVsb2FkLCBmb3JjZS1jYWNoZSwgb25seS1pZi1jYWNoZWRcclxuICAgICAgICAvLyBjcmVkZW50aWFsczogXCJzYW1lLW9yaWdpblwiLCAvLyBpbmNsdWRlLCAqc2FtZS1vcmlnaW4sIG9taXRcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiWC1BUEktS0VZXCI6IFwidFB3L2Rzb2FDMFdIYkxFU0dNTzl1dz09XCIsXHJcbiAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIC8vIHJlZGlyZWN0OiBcImZvbGxvd1wiLCAvLyBtYW51YWwsICpmb2xsb3csIGVycm9yXHJcbiAgICAgICAgLy8gcmVmZXJyZXJQb2xpY3k6IFwibm8tcmVmZXJyZXJcIiwgLy8gbm8tcmVmZXJyZXIsICpuby1yZWZlcnJlci13aGVuLWRvd25ncmFkZSwgb3JpZ2luLCBvcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4sIHNhbWUtb3JpZ2luLCBzdHJpY3Qtb3JpZ2luLCBzdHJpY3Qtb3JpZ2luLXdoZW4tY3Jvc3Mtb3JpZ2luLCB1bnNhZmUtdXJsXHJcbiAgICAgICAgLy8gYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksIC8vIGJvZHkgZGF0YSB0eXBlIG11c3QgbWF0Y2ggXCJDb250ZW50LVR5cGVcIiBoZWFkZXJcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7IC8vIHBhcnNlcyBKU09OIHJlc3BvbnNlIGludG8gbmF0aXZlIEphdmFTY3JpcHQgb2JqZWN0c1xyXG59XHJcbiJdLCJuYW1lcyI6WyJOVkVfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJiYXNlIiwicGF0aCIsInN0YXRpb25JZCIsInBhcmFtZXRlciIsInJlc29sdXRpb25UaW1lIiwiZGF5U3BhbiIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJmcm9tRGF0ZSIsInF1ZXJ5IiwiRGF0ZSIsInBhcnNlSW50IiwieWVhciIsImdldEZ1bGxZZWFyIiwibW9udGgiLCJnZXRNb250aCIsImRheSIsImdldERhdGUiLCJyZWZlcmVuY2VUaW1lIiwiRW5kUG9pbnQiLCJ2YW5uc3RhbmREYXRhIiwiZ2V0RGF0YSIsInRoZW4iLCJkYXRhIiwic3RhdHVzIiwic2VuZCIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/vannstand.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/vannstand.js"));
module.exports = __webpack_exports__;

})();